import{c as o}from"./notificiation.DEfUooIU.js";import{k as r,B as c}from"./index.BXL97NTB.js";import{a as d}from"./index.CViUNx8d.js";const l=`${c}/api/guest`,n="guests_list",u=()=>{const t=localStorage.getItem(n);return t?JSON.parse(t).map(e=>({...e,events_id:Number(e.events_id)})):[]},i=t=>{localStorage.setItem(n,JSON.stringify(t))};let m=u();const a=d(m),p=()=>a.get(),g=t=>{const e={temp_id:crypto.randomUUID(),guest_name:t.guest_name,events_id:Number(t.events_id),guest_email:t.guest_email,indications:t.indications||"",event_name:t.event_name},s=[...a.get(),e];a.set(s),i(s),o({title:"invitado agregado a la lista",type:"success"})},_=t=>{const e=a.get().filter(s=>s.temp_id!==t);a.set(e),i(e),o({title:"Invitado eliminado de la lista",type:"success"})},v=t=>{const e=a.get().map(s=>s.temp_id===t.temp_id?t:s);a.set(e),i(e),o({title:"Invitado actualizado",type:"success"})},y=async()=>{const t=a.get();if(t.length===0){o({title:"La lista está vacía",description:"Agrega al menos un invitado para enviar.",type:"info"});return}try{const e=await r.post(l,{json:t,credentials:"include"});o({title:"Invitaciones enviadas",type:"success"}),a.set([]),i([])}catch(e){console.log(e);const s=await e.response.json();o({title:"Ups! Hubo un error",description:s.error,type:"error"})}},I={addGuestTolist:g,sendGuestList:y,removeGuestFromList:_,updatedGuestList:v,getLocalGuestList:p,saveToLocalStorage:i};export{a,I as g};
