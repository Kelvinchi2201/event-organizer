---
import ManagementItem from "./ManagementItem.astro"
---

<div id="eventos-div" class="flex flex-col justify-center items-center gap-4 h-full w-full p-4">
<h1 class="text-pink-700 text-4xl md:text-6xl">Mis Eventos</h1>
<ul id="dashboard-list" class="m-0 p-2 list-none overflow-auto flex flex-col gap-8 rounded-md border border-gray-300 h-full md:w-[70%] lg:w-[50%]">
 <template id="events-item-template">
    <ManagementItem
    event_name="Fiesta de fin de año"
    event_date="31-12-2025"
    event_time="16:30"
    guests_byEvents="16"
    event_description="sera una fiesta de fin de año"
    />
 </template>
</ul>
</div>
 



<script>
    // @ts-nocheck
    import ManagementModule, {events} from "./management.module";
    import AuthModule from "../auth/auth.module";
    const eventsItemTemplate = document.querySelector('#events-item-template');
    const eventList = document.querySelector('#dashboard-list');
    await ManagementModule.getEventsListForHome();
        events.subscribe(async events => {
            eventList.innerHTML= '';
            for (const event of events) {
                const eventItem = eventsItemTemplate.content.cloneNode(true).children[0];
                const nameInput = eventItem.querySelector('#eventName');
                const dateInput = eventItem.querySelector('#event_date');
                const timeInput = eventItem.querySelector('#event_time');
                const guestsInput = eventItem.querySelector('#guests_byEvents');
                const descriptionInput = eventItem.querySelector('#event_description');
                const liElement = eventItem.querySelector('li');
                console.log();
                
                eventItem.id = event.id
                const guestsCount = await ManagementModule.getGuestsByEventId(eventItem.id)                 
                nameInput.value = event.name;
                dateInput.value = event.fecha_evento.split('T')[0];
                timeInput.value = event.hora_evento;
                guestsInput.value = guestsCount.count;
                descriptionInput.value = event.description;
                
                eventList.append(eventItem);
                console.log(nameInput.value);
            }
        });

        eventList.addEventListener('click', async (e) => {
           const editBtn = e.target.closest('.edit-btn');
           if (editBtn) {
            const liElement = editBtn.closest('li');
            const nameInput = liElement.querySelector('#eventName');
            const dateInput = liElement.querySelector('#event_date');
            const timeInput = liElement.querySelector('#event_time');
            const descriptionInput = liElement.querySelector('#event_description');
            const status = liElement.dataset.status;
            if (status === 'inputs-deshabilitados') {
                nameInput.removeAttribute('readonly');
                dateInput.removeAttribute('readonly');
                timeInput.removeAttribute('readonly');
                descriptionInput.removeAttribute('readonly');
                liElement.dataset.status = 'inputs-habilitados'
            }
           }
        })
    
    

    const user =  await AuthModule.getLoggedUser();
    const userId = user.id;
    
   
    
    
   
  
  



</script>